{"version":17,"variables":[{"key":"Cluster","type":"query","visible":true,"input":"fetch dt.entity.kubernetes_cluster\n| fields entity.name\n| sort entity.name asc","multiple":true,"version":1},{"key":"Namespace","type":"query","visible":true,"input":"fetch dt.entity.cloud_application_namespace\n| fieldsAdd kubernetes_cluster_id=clustered_by[dt.entity.kubernetes_cluster]\n// You can join these records using Dynatrace's InnerJoin\n| join [\n  fetch dt.entity.kubernetes_cluster\n  | fieldsRename kubernetes_cluster = entity.name\n  | fieldsRename kubernetes_cluster_id = id\n], on: { kubernetes_cluster_id }, fields:{kubernetes_cluster}\n\n| fields entity.name\n| sort entity.name asc","multiple":true,"version":1},{"key":"Workload","type":"query","visible":true,"input":"fetch dt.entity.cloud_application\n| fieldsAdd namespaceName,\n\n  cloudApplicationDeploymentTypes\n\n//| filter isNull(app)\n| fields cloudApplicationDeploymentTypes\n| expand cloudApplicationDeploymentTypes\n| dedup cloudApplicationDeploymentTypes","multiple":true,"version":1},{"key":"RiskLevel","type":"csv","visible":true,"input":"ALL,CRITICAL,HIGH,MEDIUM,LOW,NONE","multiple":false,"defaultValue":"ALL","version":1},{"key":"AppName","type":"query","visible":true,"input":"fetch dt.entity.cloud_application\n| fieldsAdd namespaceName,\n  app          = coalesce(\n      cloudApplicationLabels[app],\n      cloudApplicationLabels[`app.kubernetes.io/name`]\n  )\n| dedup app\n| fields app","multiple":true,"version":1}],"tiles":{"0":{"type":"data","title":"Total Vulnerabilities Across K8s Infra","query":"fetch events\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n\n// now summarize on the vulnerability level\n| sort {timestamp, direction:\"descending\"}\n| expand related_entities.kubernetes_clusters.names\n| expand related_entities.kubernetes_workloads.names\n| expand related_entities.kubernetes_workloads.ids\n| filter isNotNull(related_entities.kubernetes_workloads.ids)\n\n| join [\n  fetch dt.entity.cloud_application\n  | fieldsAdd namespaceName, \n    app          = coalesce(\n        cloudApplicationLabels[app],\n        cloudApplicationLabels[`app.kubernetes.io/name`]\n    ),\n    cloudApplicationDeploymentTypes, \n    cloudApplicationLabels, \n    managed_by   = cloudApplicationLabels[`app.kubernetes.io/managed-by`]\n  | fieldsadd related_entities.kubernetes_workloads.ids=id \n  | expand cloudApplicationDeploymentTypes\n], on:{related_entities.kubernetes_workloads.ids}, fields:{namespaceName, app, cloudApplicationDeploymentTypes, cloudApplicationLabels}\n\n| filter in(related_entities.kubernetes_clusters.names, $Cluster)\n| filter in(namespaceName, $Namespace)\n| filter in(cloudApplicationDeploymentTypes, $Workload)\n| filter in(app, $AppName) or isNull(app)\n\n\n// | dedup {vulnerability.id, affected_entity.id}, sort: { timestamp desc }\n| summarize\n{\n  vulnerability.stack=takeAny(vulnerability.stack),\n  namespaceName = takeFirst(namespaceName),\n  vulnerability.type=takeAny(vulnerability.type),\n  vulnerability.parent.resolution.status=takeFirst(vulnerability.parent.resolution.status),\n  vulnerability.parent.mute.status=takeFirst(vulnerability.parent.mute.status),\n  vulnerability.risk.score=takeMax(if(vulnerability.mute.status!=\"MUTED\",vulnerability.risk.score,else:0)),\n  affected_entity.management_zones.names=arrayRemoveNulls(collectArray(affected_entity.management_zones.names, expand:true)),\n  affected_entity.vulnerable_component.names=arrayRemoveNulls(collectArray(affected_entity.vulnerable_component.names)),\n  nonMutedEntities=countIf(vulnerability.mute.status==\"NOT_MUTED\"),\n  openStatus=countIf(vulnerability.resolution.status==\"OPEN\")\n},by: {vulnerability.display_id, related_entities.kubernetes_workloads.ids,timestamp=bin(timestamp,15min)}\n| fieldsAdd vulnerability.resolution.status=if(vulnerability.parent.resolution.status==\"RESOLVED\",\"RESOLVED\",\n    else:if(openStatus==0, \"RESOLVED\",\n    else:\"OPEN\"))\n| fieldsAdd vulnerability.mute.status=if(vulnerability.parent.mute.status==\"MUTED\",\"MUTED\",\n    else:if(nonMutedEntities==0, \"MUTED\",\n    else:\"NOT_MUTED\"))\n| makeTimeseries {\n  Vulnerabilities=countIf(vulnerability.resolution.status==\"OPEN\" AND vulnerability.mute.status==\"NOT_MUTED\", default:null)\n}, time: timestamp, interval:15min\n\n| fieldsAdd `Open vulnerabilities`=arrayLast(arrayRemoveNulls(Vulnerabilities))","davis":{"enabled":false,"davisVisualization":{"isAvailable":true}},"visualization":"singleValue","visualizationSettings":{"thresholds":[],"chartSettings":{"xAxisScaling":"analyzedTimeframe","gapPolicy":"gap","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"curve":"linear","pointsDisplay":"auto","categoricalBarChartSettings":{"layout":"horizontal","categoryAxisTickLayout":"horizontal","scale":"absolute","groupMode":"stacked","colorPaletteMode":"multi-color","categoryAxisLabel":"interval,Open vulnerabilities","valueAxisLabel":"Open vulnerabilities","tooltipVariant":"single","categoryAxis":["interval","Open vulnerabilities"],"valueAxis":["Open vulnerabilities"]},"colorPalette":"categorical","valueRepresentation":"absolute","truncationMode":"middle","hiddenLegendFields":["interval","Open vulnerabilities"],"fieldMapping":{"timestamp":"timeframe","leftAxisValues":["Vulnerabilities"]},"xAxisLabel":"timeframe","xAxisIsLabelVisible":false,"leftYAxisSettings":{}},"singleValue":{"showLabel":false,"label":"Open vulnerabilities","prefixIcon":"ApplicationSecuritySignetIcon","recordField":"Open vulnerabilities","autoscale":true,"alignment":"center","trend":{"trendType":"auto","isVisible":true,"upward":"#D65151","downward":"#48936F"},"colorThresholdTarget":"value","isIconVisible":true,"sparklineSettings":{"record":"Vulnerabilities"}},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"linewrapEnabled":false,"lineWrapIds":[],"monospacedFontEnabled":false,"monospacedFontColumns":[],"columnWidths":{},"columnTypeOverrides":[{"fields":["Vulnerabilities"],"value":"sparkline","id":1739824917559}]},"honeycomb":{"shape":"hexagon","legend":{"hidden":false,"position":"auto"},"displayedFields":[],"dataMappings":{},"truncationMode":"middle","colorMode":"color-palette","colorPalette":"blue"},"histogram":{"legend":"auto","yAxis":{"label":"Frequency","scale":"linear"},"colorPalette":"categorical","dataMappings":[{"valueAxis":"Open vulnerabilities","rangeAxis":""},{"valueAxis":"interval","rangeAxis":""}],"variant":"single","truncationMode":"middle","displayedFields":[]},"valueBoundaries":{"min":"auto","max":"auto"},"label":{"showLabel":false,"label":"Open vulnerabilities"},"icon":{"showIcon":false,"icon":""},"autoSelectVisualization":false,"dataMapping":{"value":"Open vulnerabilities"}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false}},"1":{"type":"markdown","title":"","content":"---"},"3":{"type":"data","title":"Total Open Vulnerabilities by K8s Cluster","query":"fetch events\n| filter dt.system.bucket==\"default_security_events\"\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n\n| filter vulnerability.mute.status == \"NOT_MUTED\"\n| filter vulnerability.parent.mute.status == \"NOT_MUTED\"\n\n// now summarize on the vulnerability level\n| sort {timestamp, direction:\"descending\"}\n| expand related_entities.kubernetes_clusters.names\n| expand related_entities.kubernetes_workloads.names\n| expand related_entities.kubernetes_workloads.ids\n| filter isNotNull(related_entities.kubernetes_workloads.ids)\n\n| join [\n  fetch dt.entity.cloud_application\n  | fieldsAdd namespaceName, \n    app          = coalesce(\n        cloudApplicationLabels[app],\n        cloudApplicationLabels[`app.kubernetes.io/name`]\n    ),\n    cloudApplicationDeploymentTypes, \n    cloudApplicationLabels, \n    managed_by   = cloudApplicationLabels[`app.kubernetes.io/managed-by`]\n  | fieldsadd related_entities.kubernetes_workloads.ids=id \n  | expand cloudApplicationDeploymentTypes\n], on:{related_entities.kubernetes_workloads.ids}, fields:{namespaceName, app, cloudApplicationDeploymentTypes, cloudApplicationLabels}\n\n//| dedup {vulnerability.id, affected_entity.id}, sort: { timestamp desc }\n| summarize\n{\n  vulnerability.risk.level = takeFirst(vulnerability.risk.level),\n  risk.score=takeMax(if(vulnerability.mute.status!=\"MUTED\",vulnerability.risk.score,else:0)),\n  vulnerability.type=takeAny(vulnerability.type),\n  kubernetes_cluster = takeFirst(related_entities.kubernetes_clusters.names),\n  vulnerability.stack=takeAny(vulnerability.stack),\n  vulnerability.parent.resolution.status=takeFirst(vulnerability.parent.resolution.status),\n  vulnerability.parent.mute.status=takeFirst(vulnerability.parent.mute.status),\n  affected_entity.management_zones.names=arrayRemoveNulls(collectArray(affected_entity.management_zones.names, expand:true)),\n  affected_entity.vulnerable_component.names=arrayRemoveNulls(collectArray(affected_entity.vulnerable_component.names)),\n  nonMutedEntities=countIf(vulnerability.mute.status==\"NOT_MUTED\"),\n  openStatus=countIf(vulnerability.resolution.status==\"OPEN\"),\n  vulnerability.davis_assessment.exposure_status = takeFirst(vulnerability.davis_assessment.exposure_status),\n  vulnerability.davis_assessment.data_assets_status = takeFirst(vulnerability.davis_assessment.data_assets_status),\n  vulnerability.davis_assessment.vulnerable_function_status = takeFirst(vulnerability.davis_assessment.vulnerable_function_status),\n  vulnerability.davis_assessment.exploit_status = takeFirst(vulnerability.davis_assessment.exploit_status)\n},by: {vulnerability.display_id, related_entities.kubernetes_workloads.ids}\n| fieldsAdd vulnerability.resolution.status=if(vulnerability.parent.resolution.status==\"RESOLVED\",\"RESOLVED\",\n    else:if(openStatus==0, \"RESOLVED\",\n    else:\"OPEN\"))\n| fieldsAdd vulnerability.mute.status=if(vulnerability.parent.mute.status==\"MUTED\",\"MUTED\",\n    else:if(nonMutedEntities==0, \"MUTED\",\n    else:\"NOT_MUTED\"))\n| summarize \n  Critical=countIf(vulnerability.risk.level==\"CRITICAL\"),\n  High=countIf(vulnerability.risk.level==\"HIGH\"),\n  Medium=countIf(vulnerability.risk.level==\"MEDIUM\"),\n  Low=countIf(vulnerability.risk.level==\"LOW\"),\n  Count = count(), by:{kubernetes_cluster}\n| sort Count desc\n","davis":{"enabled":false,"davisVisualization":{"isAvailable":true}},"visualization":"table","visualizationSettings":{"thresholds":[{"id":1,"field":"Critical","title":"","isEnabled":true,"rules":[{"id":0,"color":{"Default":"var(--dt-colors-charts-status-ideal-default, #2f6863)"},"comparator":"≥","label":""},{"id":1,"color":{"Default":"var(--dt-colors-charts-status-warning-default, #eca440)"},"comparator":"≥","label":""},{"id":2,"color":{"Default":"var(--dt-colors-charts-status-critical-default, #c4233b)"},"comparator":"≥","label":"","value":1}]},{"id":2,"field":"High","title":"","isEnabled":true,"rules":[{"id":0,"color":{"Default":"var(--dt-colors-charts-status-ideal-default, #2f6863)"},"comparator":"≥","label":""},{"id":1,"color":{"Default":"var(--dt-colors-charts-status-warning-default, #eca440)"},"comparator":"≥","label":"","value":2},{"id":2,"color":{"Default":"var(--dt-colors-charts-status-critical-default, #c4233b)"},"comparator":"≥","label":""}]}],"chartSettings":{"xAxisScaling":"analyzedTimeframe","gapPolicy":"gap","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"curve":"linear","pointsDisplay":"auto","categoricalBarChartSettings":{"layout":"horizontal","categoryAxisTickLayout":"horizontal","scale":"absolute","groupMode":"stacked","colorPaletteMode":"multi-color","categoryAxis":["kubernetes_cluster"],"valueAxis":["Critical","High","Medium","Low","Count"],"categoryAxisLabel":"kubernetes_cluster","valueAxisLabel":"Critical,High,Medium,Low,Count","tooltipVariant":"single"},"colorPalette":"categorical","valueRepresentation":"absolute","truncationMode":"middle","hiddenLegendFields":[]},"singleValue":{"showLabel":false,"label":"Open vulnerabilities","prefixIcon":"ApplicationSecuritySignetIcon","recordField":"Open vulnerabilities","autoscale":true,"alignment":"center","trend":{"trendType":"auto","isVisible":true},"colorThresholdTarget":"value","isIconVisible":true,"sparklineSettings":{}},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"linewrapEnabled":false,"lineWrapIds":[],"monospacedFontEnabled":false,"monospacedFontColumns":[],"columnWidths":{"[\"cluster\"]":119.21875,"[\"related_entities.kubernetes_clusters.names\"]":338.875},"columnTypeOverrides":[],"sortBy":{"columnId":"[\"namespaceName\"]","direction":"descending"}},"honeycomb":{"shape":"hexagon","legend":{"hidden":false,"position":"auto"},"displayedFields":["kubernetes_cluster"],"dataMappings":{"value":"Critical"},"truncationMode":"middle","colorMode":"color-palette","colorPalette":"blue"},"histogram":{"legend":"auto","yAxis":{"label":"Frequency","scale":"linear"},"colorPalette":"categorical","dataMappings":[{"valueAxis":"Critical","rangeAxis":""},{"valueAxis":"High","rangeAxis":""},{"valueAxis":"Medium","rangeAxis":""},{"valueAxis":"Low","rangeAxis":""},{"valueAxis":"Count","rangeAxis":""}],"variant":"single","truncationMode":"middle","displayedFields":["kubernetes_cluster"]},"valueBoundaries":{"min":"auto","max":"auto"},"label":{"showLabel":false,"label":"Critical"},"icon":{"showIcon":false,"icon":""},"autoSelectVisualization":false,"dataMapping":{"value":"Critical"}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false}},"4":{"type":"data","title":"Workloads - Public Exploit","query":"fetch events\n| filter dt.system.bucket==\"default_security_events\"\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n\n// now summarize on the vulnerability level\n| sort {timestamp, direction:\"descending\"}\n| expand related_entities.kubernetes_clusters.names\n| expand related_entities.kubernetes_workloads.names\n| expand related_entities.kubernetes_workloads.ids\n| filter isNotNull(related_entities.kubernetes_workloads.ids)\n\n| join [\n  fetch dt.entity.cloud_application\n  | fieldsAdd namespaceName, \n    app          = coalesce(\n        cloudApplicationLabels[app],\n        cloudApplicationLabels[`app.kubernetes.io/name`]\n    ),\n    cloudApplicationDeploymentTypes, \n    cloudApplicationLabels, \n    managed_by   = cloudApplicationLabels[`app.kubernetes.io/managed-by`]\n  | fieldsadd related_entities.kubernetes_workloads.ids=id \n  | expand cloudApplicationDeploymentTypes\n], on:{related_entities.kubernetes_workloads.ids}, fields:{namespaceName, app, cloudApplicationDeploymentTypes, cloudApplicationLabels}\n\n| filter in(related_entities.kubernetes_clusters.names, $Cluster)\n| filter in(namespaceName, $Namespace)\n| filter in(cloudApplicationDeploymentTypes, $Workload)\n| filter in(app, $AppName) or isNull(app)\n// | dedup {vulnerability.id, affected_entity.id}, sort: { timestamp desc }\n| summarize\n{\n  vulnerability.stack=takeAny(vulnerability.stack),\n  namespaceName = takeFirst(namespaceName),\n  vulnerability.davis_assessment.exploit_status = takeFirst(vulnerability.davis_assessment.exploit_status),\n  vulnerability.type=takeAny(vulnerability.type),\n  vulnerability.parent.resolution.status=takeFirst(vulnerability.parent.resolution.status),\n  vulnerability.parent.mute.status=takeFirst(vulnerability.parent.mute.status),\n  vulnerability.risk.score=takeMax(if(vulnerability.mute.status!=\"MUTED\",vulnerability.risk.score,else:0)),\n  affected_entity.management_zones.names=arrayRemoveNulls(collectArray(affected_entity.management_zones.names, expand:true)),\n  affected_entity.vulnerable_component.names=arrayRemoveNulls(collectArray(affected_entity.vulnerable_component.names)),\n  nonMutedEntities=countIf(vulnerability.mute.status==\"NOT_MUTED\"),\n  openStatus=countIf(vulnerability.resolution.status==\"OPEN\")\n},by: {vulnerability.display_id, related_entities.kubernetes_workloads.ids,timestamp=bin(timestamp,15min)}\n| fieldsAdd vulnerability.resolution.status=if(vulnerability.parent.resolution.status==\"RESOLVED\",\"RESOLVED\",\n    else:if(openStatus==0, \"RESOLVED\",\n    else:\"OPEN\"))\n| fieldsAdd vulnerability.mute.status=if(vulnerability.parent.mute.status==\"MUTED\",\"MUTED\",\n    else:if(nonMutedEntities==0, \"MUTED\",\n    else:\"NOT_MUTED\"))\n| makeTimeseries {\n  Vulnerabilities=countIf(vulnerability.resolution.status==\"OPEN\" AND vulnerability.mute.status==\"NOT_MUTED\" AND vulnerability.davis_assessment.exploit_status==\"AVAILABLE\",  default:null)\n}, time: timestamp, interval:15min\n\n| fieldsAdd `Open vulnerabilities`=arrayLast(arrayRemoveNulls(Vulnerabilities))","davis":{"enabled":false,"davisVisualization":{"isAvailable":true}},"visualization":"singleValue","visualizationSettings":{"thresholds":[],"chartSettings":{"xAxisScaling":"analyzedTimeframe","gapPolicy":"gap","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"curve":"linear","pointsDisplay":"auto","categoricalBarChartSettings":{"layout":"horizontal","categoryAxisTickLayout":"horizontal","scale":"absolute","groupMode":"stacked","colorPaletteMode":"multi-color","categoryAxis":["interval","Open vulnerabilities"],"categoryAxisLabel":"interval,Open vulnerabilities","valueAxis":["Open vulnerabilities"],"valueAxisLabel":"Open vulnerabilities","tooltipVariant":"single"},"colorPalette":"categorical","valueRepresentation":"absolute","truncationMode":"middle","hiddenLegendFields":["interval","Open vulnerabilities"],"fieldMapping":{"timestamp":"timeframe","leftAxisValues":["Vulnerabilities"]},"xAxisLabel":"timeframe","xAxisIsLabelVisible":false,"leftYAxisSettings":{}},"singleValue":{"showLabel":false,"label":"Open vulnerabilities","prefixIcon":"ExploitIcon","recordField":"Open vulnerabilities","autoscale":true,"alignment":"center","trend":{"trendType":"auto","isVisible":true,"upward":"#D65151","downward":"#48936F"},"colorThresholdTarget":"value","isIconVisible":true,"sparklineSettings":{"record":"Vulnerabilities"}},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"linewrapEnabled":false,"lineWrapIds":[],"monospacedFontEnabled":false,"monospacedFontColumns":[],"columnWidths":{},"columnTypeOverrides":[{"fields":["Vulnerabilities"],"value":"sparkline","id":1736950131192}]},"honeycomb":{"shape":"hexagon","legend":{"hidden":false,"position":"auto"},"displayedFields":[],"dataMappings":{},"truncationMode":"middle","colorMode":"color-palette","colorPalette":"categorical"},"histogram":{"legend":"auto","yAxis":{"label":"Frequency","scale":"linear"},"colorPalette":"categorical","dataMappings":[{"valueAxis":"Open vulnerabilities","rangeAxis":""},{"valueAxis":"interval","rangeAxis":""}],"variant":"single","truncationMode":"middle","displayedFields":[]},"valueBoundaries":{"min":"auto","max":"auto"},"label":{"showLabel":false,"label":"Open vulnerabilities"},"icon":{"showIcon":false,"icon":""},"autoSelectVisualization":false,"dataMapping":{"value":"Open vulnerabilities"}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false}},"5":{"type":"data","title":"Workloads - Network Exposure","query":"fetch events\n| filter dt.system.bucket==\"default_security_events\"\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n\n// now summarize on the vulnerability level\n| sort {timestamp, direction:\"descending\"}\n| expand related_entities.kubernetes_clusters.names\n| expand related_entities.kubernetes_workloads.names\n| expand related_entities.kubernetes_workloads.ids\n| filter isNotNull(related_entities.kubernetes_workloads.ids)\n\n| join [\n  fetch dt.entity.cloud_application\n  | fieldsAdd namespaceName, \n    app          = coalesce(\n        cloudApplicationLabels[app],\n        cloudApplicationLabels[`app.kubernetes.io/name`]\n    ),\n    cloudApplicationDeploymentTypes, \n    cloudApplicationLabels, \n    managed_by   = cloudApplicationLabels[`app.kubernetes.io/managed-by`]\n  | fieldsadd related_entities.kubernetes_workloads.ids=id \n  | expand cloudApplicationDeploymentTypes\n], on:{related_entities.kubernetes_workloads.ids}, fields:{namespaceName, app, cloudApplicationDeploymentTypes, cloudApplicationLabels}\n\n| filter in(related_entities.kubernetes_clusters.names, $Cluster)\n| filter in(namespaceName, $Namespace)\n| filter in(cloudApplicationDeploymentTypes, $Workload)\n| filter in(app, $AppName) or isNull(app)\n\n// | dedup {vulnerability.id, affected_entity.id}, sort: { timestamp desc }\n| summarize\n{\n  vulnerability.stack=takeAny(vulnerability.stack),\n  namespaceName = takeFirst(namespaceName),\n  vulnerability.davis_assessment.exposure_status = takeFirst(vulnerability.davis_assessment.exposure_status),\n  vulnerability.davis_assessment.exploit_status = takeFirst(vulnerability.davis_assessment.exploit_status),\n  vulnerability.type=takeAny(vulnerability.type),\n  vulnerability.parent.resolution.status=takeFirst(vulnerability.parent.resolution.status),\n  vulnerability.parent.mute.status=takeFirst(vulnerability.parent.mute.status),\n  vulnerability.risk.score=takeMax(if(vulnerability.mute.status!=\"MUTED\",vulnerability.risk.score,else:0)),\n  affected_entity.management_zones.names=arrayRemoveNulls(collectArray(affected_entity.management_zones.names, expand:true)),\n  affected_entity.vulnerable_component.names=arrayRemoveNulls(collectArray(affected_entity.vulnerable_component.names)),\n  nonMutedEntities=countIf(vulnerability.mute.status==\"NOT_MUTED\"),\n  openStatus=countIf(vulnerability.resolution.status==\"OPEN\")\n},by: {vulnerability.display_id, related_entities.kubernetes_workloads.ids,timestamp=bin(timestamp,15min)}\n| fieldsAdd vulnerability.resolution.status=if(vulnerability.parent.resolution.status==\"RESOLVED\",\"RESOLVED\",\n    else:if(openStatus==0, \"RESOLVED\",\n    else:\"OPEN\"))\n| fieldsAdd vulnerability.mute.status=if(vulnerability.parent.mute.status==\"MUTED\",\"MUTED\",\n    else:if(nonMutedEntities==0, \"MUTED\",\n    else:\"NOT_MUTED\"))\n| makeTimeseries {\n  Vulnerabilities=countIf(\n    vulnerability.resolution.status==\"OPEN\" \n    AND vulnerability.mute.status==\"NOT_MUTED\" \n    AND vulnerability.davis_assessment.exposure_status==\"PUBLIC_NETWORK\",  default:null)\n}, time: timestamp, interval:15min\n\n| fieldsAdd `Open vulnerabilities`=arrayLast(arrayRemoveNulls(Vulnerabilities))","davis":{"enabled":false,"davisVisualization":{"isAvailable":true}},"visualization":"singleValue","visualizationSettings":{"thresholds":[],"chartSettings":{"xAxisScaling":"analyzedTimeframe","gapPolicy":"gap","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"curve":"linear","pointsDisplay":"auto","categoricalBarChartSettings":{"layout":"horizontal","categoryAxisTickLayout":"horizontal","scale":"absolute","groupMode":"stacked","colorPaletteMode":"multi-color","categoryAxis":["interval","Open vulnerabilities"],"categoryAxisLabel":"interval,Open vulnerabilities","valueAxis":["Open vulnerabilities"],"valueAxisLabel":"Open vulnerabilities","tooltipVariant":"single"},"colorPalette":"categorical","valueRepresentation":"absolute","truncationMode":"middle","hiddenLegendFields":["interval","Open vulnerabilities"],"fieldMapping":{"timestamp":"timeframe","leftAxisValues":["Vulnerabilities"]},"xAxisLabel":"timeframe","xAxisIsLabelVisible":false,"leftYAxisSettings":{}},"singleValue":{"showLabel":false,"label":"Open vulnerabilities","prefixIcon":"PublicExposureIcon","recordField":"Open vulnerabilities","autoscale":true,"alignment":"center","trend":{"trendType":"auto","isVisible":true,"upward":"#D65151","downward":"#48936F"},"colorThresholdTarget":"value","isIconVisible":true,"sparklineSettings":{"record":"Vulnerabilities"}},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"linewrapEnabled":false,"lineWrapIds":[],"monospacedFontEnabled":false,"monospacedFontColumns":[],"columnWidths":{},"columnTypeOverrides":[{"fields":["Vulnerabilities"],"value":"sparkline","id":1736950131430}]},"honeycomb":{"shape":"hexagon","legend":{"hidden":false,"position":"auto"},"displayedFields":[],"dataMappings":{},"truncationMode":"middle","colorMode":"color-palette","colorPalette":"categorical"},"histogram":{"legend":"auto","yAxis":{"label":"Frequency","scale":"linear"},"colorPalette":"categorical","dataMappings":[{"valueAxis":"Open vulnerabilities","rangeAxis":""},{"valueAxis":"interval","rangeAxis":""}],"variant":"single","truncationMode":"middle","displayedFields":[]},"valueBoundaries":{"min":"auto","max":"auto"},"label":{"showLabel":false,"label":"Open vulnerabilities"},"icon":{"showIcon":false,"icon":""},"autoSelectVisualization":false,"dataMapping":{"value":"Open vulnerabilities"}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false}},"6":{"type":"data","title":"Total Vulnerabilities by Severity","query":"fetch events\n| filter dt.system.bucket==\"default_security_events\"\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n\n// now summarize on the vulnerability level\n| sort {timestamp, direction:\"descending\"}\n| expand related_entities.kubernetes_clusters.names\n| expand related_entities.kubernetes_workloads.names\n| expand related_entities.kubernetes_workloads.ids\n| filter isNotNull(related_entities.kubernetes_workloads.ids)\n\n| join [\n  fetch dt.entity.cloud_application\n  | fieldsAdd namespaceName, \n    app          = coalesce(\n        cloudApplicationLabels[app],\n        cloudApplicationLabels[`app.kubernetes.io/name`]\n    ),\n    cloudApplicationDeploymentTypes, \n    cloudApplicationLabels, \n    managed_by   = cloudApplicationLabels[`app.kubernetes.io/managed-by`]\n  | fieldsadd related_entities.kubernetes_workloads.ids=id \n  | expand cloudApplicationDeploymentTypes\n], on:{related_entities.kubernetes_workloads.ids}, fields:{namespaceName, app, cloudApplicationDeploymentTypes, cloudApplicationLabels}\n\n| filter in(related_entities.kubernetes_clusters.names, $Cluster)\n| filter in(namespaceName, $Namespace)\n| filter in(cloudApplicationDeploymentTypes, $Workload)\n| filter in(app, $AppName) or isNull(app)\n// | dedup {vulnerability.id, affected_entity.id}, sort: { timestamp desc }\n| summarize\n{\n  vulnerability.risk.level = takeFirst(vulnerability.risk.level),\n  risk.score=takeMax(if(vulnerability.mute.status!=\"MUTED\",vulnerability.risk.score,else:0)),\n  vulnerability.type=takeAny(vulnerability.type),\n  vulnerability.stack=takeAny(vulnerability.stack),\n  vulnerability.parent.resolution.status=takeFirst(vulnerability.parent.resolution.status),\n  vulnerability.parent.mute.status=takeFirst(vulnerability.parent.mute.status),\n  affected_entity.management_zones.names=arrayRemoveNulls(collectArray(affected_entity.management_zones.names, expand:true)),\n  affected_entity.vulnerable_component.names=arrayRemoveNulls(collectArray(affected_entity.vulnerable_component.names)),\n  nonMutedEntities=countIf(vulnerability.mute.status==\"NOT_MUTED\"),\n  openStatus=countIf(vulnerability.resolution.status==\"OPEN\"),\n  vulnerability.davis_assessment.exposure_status = takeFirst(vulnerability.davis_assessment.exposure_status),\n  vulnerability.davis_assessment.data_assets_status = takeFirst(vulnerability.davis_assessment.data_assets_status),\n  vulnerability.davis_assessment.vulnerable_function_status = takeFirst(vulnerability.davis_assessment.vulnerable_function_status),\n  vulnerability.davis_assessment.exploit_status = takeFirst(vulnerability.davis_assessment.exploit_status)\n},by: {vulnerability.display_id, related_entities.kubernetes_workloads.ids}\n| fieldsAdd vulnerability.resolution.status=if(vulnerability.parent.resolution.status==\"RESOLVED\",\"RESOLVED\",\n    else:if(openStatus==0, \"RESOLVED\",\n    else:\"OPEN\"))\n| fieldsAdd vulnerability.mute.status=if(vulnerability.parent.mute.status==\"MUTED\",\"MUTED\",\n    else:if(nonMutedEntities==0, \"MUTED\",\n    else:\"NOT_MUTED\"))\n\n| filter vulnerability.resolution.status==\"OPEN\" AND vulnerability.mute.status==\"NOT_MUTED\"\n\n| summarize count=count(), by:{vulnerability.risk.level}","davis":{"enabled":false,"davisVisualization":{"isAvailable":true}},"visualization":"pieChart","visualizationSettings":{"thresholds":[],"chartSettings":{"xAxisScaling":"analyzedTimeframe","gapPolicy":"gap","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"absolute","hideLabels":false},"categoryOverrides":{},"curve":"linear","pointsDisplay":"auto","categoricalBarChartSettings":{"layout":"horizontal","categoryAxisTickLayout":"horizontal","scale":"absolute","groupMode":"stacked","colorPaletteMode":"multi-color","categoryAxis":["vulnerability.risk.level"],"valueAxis":["count"],"categoryAxisLabel":"vulnerability.risk.level","valueAxisLabel":"count","tooltipVariant":"single"},"colorPalette":"security-risk-level","valueRepresentation":"absolute","truncationMode":"end","hiddenLegendFields":[],"legend":{"position":"right","hidden":false}},"singleValue":{"showLabel":false,"label":"Open vulnerabilities","prefixIcon":"ApplicationSecuritySignetIcon","recordField":"Open vulnerabilities","autoscale":true,"alignment":"center","trend":{"trendType":"auto","isVisible":true,"upward":"#D65151","downward":"#48936F"},"colorThresholdTarget":"value","isIconVisible":true,"sparklineSettings":{}},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"linewrapEnabled":false,"lineWrapIds":[],"monospacedFontEnabled":false,"monospacedFontColumns":[],"columnWidths":{},"columnTypeOverrides":[]},"honeycomb":{"shape":"hexagon","legend":{"hidden":false,"position":"auto"},"displayedFields":["vulnerability.risk.level"],"dataMappings":{"value":"count"},"truncationMode":"middle","colorMode":"color-palette","colorPalette":"blue"},"histogram":{"legend":"auto","yAxis":{"label":"Frequency","scale":"linear"},"colorPalette":"categorical","dataMappings":[{"valueAxis":"count","rangeAxis":""}],"variant":"single","truncationMode":"middle","displayedFields":["vulnerability.risk.level"]},"valueBoundaries":{"min":"auto","max":"auto"},"label":{"showLabel":false,"label":"count"},"icon":{"showIcon":false,"icon":""},"autoSelectVisualization":false,"legend":{"ratio":33},"dataMapping":{"value":"count"}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false}},"7":{"type":"data","title":"Workloads -  Reachable Data Assets","query":"fetch events\n| filter dt.system.bucket==\"default_security_events\"\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n\n// now summarize on the vulnerability level\n| sort {timestamp, direction:\"descending\"}\n| expand related_entities.kubernetes_clusters.names\n| expand related_entities.kubernetes_workloads.names\n| expand related_entities.kubernetes_workloads.ids\n| filter isNotNull(related_entities.kubernetes_workloads.ids)\n\n| join [\n  fetch dt.entity.cloud_application\n  | fieldsAdd namespaceName, \n    app          = coalesce(\n        cloudApplicationLabels[app],\n        cloudApplicationLabels[`app.kubernetes.io/name`]\n    ),\n    cloudApplicationDeploymentTypes, \n    cloudApplicationLabels, \n    managed_by   = cloudApplicationLabels[`app.kubernetes.io/managed-by`]\n  | fieldsadd related_entities.kubernetes_workloads.ids=id \n  | expand cloudApplicationDeploymentTypes\n], on:{related_entities.kubernetes_workloads.ids}, fields:{namespaceName, app, cloudApplicationDeploymentTypes, cloudApplicationLabels}\n\n| filter in(related_entities.kubernetes_clusters.names, $Cluster)\n| filter in(namespaceName, $Namespace)\n| filter in(cloudApplicationDeploymentTypes, $Workload)\n| filter in(app, $AppName) or isNull(app)\n\n| summarize\n{\n  vulnerability.stack=takeAny(vulnerability.stack),\n  namespaceName = takeFirst(namespaceName),\n  vulnerability.davis_assessment.exposure_status = takeFirst(vulnerability.davis_assessment.exposure_status),\n  vulnerability.davis_assessment.exploit_status = takeFirst(vulnerability.davis_assessment.exploit_status),\n  vulnerability.davis_assessment.data_assets_status = takeFirst(vulnerability.davis_assessment.data_assets_status),\n  vulnerability.type=takeAny(vulnerability.type),\n  vulnerability.parent.resolution.status=takeFirst(vulnerability.parent.resolution.status),\n  vulnerability.parent.mute.status=takeFirst(vulnerability.parent.mute.status),\n  vulnerability.risk.score=takeMax(if(vulnerability.mute.status!=\"MUTED\",vulnerability.risk.score,else:0)),\n  affected_entity.management_zones.names=arrayRemoveNulls(collectArray(affected_entity.management_zones.names, expand:true)),\n  affected_entity.vulnerable_component.names=arrayRemoveNulls(collectArray(affected_entity.vulnerable_component.names)),\n  nonMutedEntities=countIf(vulnerability.mute.status==\"NOT_MUTED\"),\n  openStatus=countIf(vulnerability.resolution.status==\"OPEN\")\n},by: {vulnerability.display_id, related_entities.kubernetes_workloads.ids,timestamp=bin(timestamp,3h)}\n| fieldsAdd vulnerability.resolution.status=if(vulnerability.parent.resolution.status==\"RESOLVED\",\"RESOLVED\",\n    else:if(openStatus==0, \"RESOLVED\",\n    else:\"OPEN\"))\n| fieldsAdd vulnerability.mute.status=if(vulnerability.parent.mute.status==\"MUTED\",\"MUTED\",\n    else:if(nonMutedEntities==0, \"MUTED\",\n    else:\"NOT_MUTED\"))\n| makeTimeseries {\n  Vulnerabilities=countIf(\n    vulnerability.resolution.status==\"OPEN\" \n    AND vulnerability.mute.status==\"NOT_MUTED\" \n    AND vulnerability.davis_assessment.data_assets_status==\"REACHABLE\", \n  default:null)\n}, time: timestamp, interval:3h\n\n| fieldsAdd `Open vulnerabilities`=arrayLast(arrayRemoveNulls(Vulnerabilities))","davis":{"enabled":false,"davisVisualization":{"isAvailable":true}},"visualization":"singleValue","visualizationSettings":{"thresholds":[],"chartSettings":{"xAxisScaling":"analyzedTimeframe","gapPolicy":"gap","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"curve":"linear","pointsDisplay":"auto","categoricalBarChartSettings":{"layout":"horizontal","categoryAxisTickLayout":"horizontal","scale":"absolute","groupMode":"stacked","colorPaletteMode":"multi-color","categoryAxis":["interval","Open vulnerabilities"],"categoryAxisLabel":"interval,Open vulnerabilities","valueAxis":["Open vulnerabilities"],"valueAxisLabel":"Open vulnerabilities","tooltipVariant":"single"},"colorPalette":"categorical","valueRepresentation":"absolute","truncationMode":"middle","hiddenLegendFields":["interval","Open vulnerabilities"],"fieldMapping":{"timestamp":"timeframe","leftAxisValues":["Vulnerabilities"]},"xAxisLabel":"timeframe","xAxisIsLabelVisible":false,"leftYAxisSettings":{}},"singleValue":{"showLabel":false,"label":"Open vulnerabilities","prefixIcon":"AssetIcon","recordField":"Open vulnerabilities","autoscale":true,"alignment":"center","trend":{"trendType":"auto","isVisible":true,"upward":"#D65151","downward":"#48936F"},"colorThresholdTarget":"value","isIconVisible":true,"sparklineSettings":{"record":"Vulnerabilities"}},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"linewrapEnabled":false,"lineWrapIds":[],"monospacedFontEnabled":false,"monospacedFontColumns":[],"columnWidths":{},"columnTypeOverrides":[{"fields":["Vulnerabilities"],"value":"sparkline","id":1736950131234}]},"honeycomb":{"shape":"hexagon","legend":{"hidden":false,"position":"auto"},"displayedFields":[],"dataMappings":{},"truncationMode":"middle","colorMode":"color-palette","colorPalette":"categorical"},"histogram":{"legend":"auto","yAxis":{"label":"Frequency","scale":"linear"},"colorPalette":"categorical","dataMappings":[{"valueAxis":"Open vulnerabilities","rangeAxis":""},{"valueAxis":"interval","rangeAxis":""}],"variant":"single","truncationMode":"middle","displayedFields":[]},"valueBoundaries":{"min":"auto","max":"auto"},"label":{"showLabel":false,"label":"Open vulnerabilities"},"icon":{"showIcon":false,"icon":""},"autoSelectVisualization":false,"dataMapping":{"value":"Open vulnerabilities"}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false}},"8":{"type":"data","title":"Workloads -  Vuln Function in Use","query":"fetch events\n| filter dt.system.bucket==\"default_security_events\"\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n\n// now summarize on the vulnerability level\n| sort {timestamp, direction:\"descending\"}\n| expand related_entities.kubernetes_clusters.names\n| expand related_entities.kubernetes_workloads.names\n| expand related_entities.kubernetes_workloads.ids\n| filter isNotNull(related_entities.kubernetes_workloads.ids)\n\n| join [\n  fetch dt.entity.cloud_application\n  | fieldsAdd namespaceName, \n    app          = coalesce(\n        cloudApplicationLabels[app],\n        cloudApplicationLabels[`app.kubernetes.io/name`]\n    ),\n    cloudApplicationDeploymentTypes, \n    cloudApplicationLabels, \n    managed_by   = cloudApplicationLabels[`app.kubernetes.io/managed-by`]\n  | fieldsadd related_entities.kubernetes_workloads.ids=id \n  | expand cloudApplicationDeploymentTypes\n], on:{related_entities.kubernetes_workloads.ids}, fields:{namespaceName, app, cloudApplicationDeploymentTypes, cloudApplicationLabels}\n\n| filter in(related_entities.kubernetes_clusters.names, $Cluster)\n| filter in(namespaceName, $Namespace)\n| filter in(cloudApplicationDeploymentTypes, $Workload)\n| filter in(app, $AppName)  or isNull(app)\n\n| summarize\n{\n  vulnerability.stack=takeAny(vulnerability.stack),\n  namespaceName = takeFirst(namespaceName),\n  vulnerability.davis_assessment.vulnerable_function_status = takeFirst(vulnerability.davis_assessment.vulnerable_function_status),\n  vulnerability.davis_assessment.exposure_status = takeFirst(vulnerability.davis_assessment.exposure_status),\n  vulnerability.davis_assessment.exploit_status = takeFirst(vulnerability.davis_assessment.exploit_status),\n  vulnerability.davis_assessment.data_assets_status = takeFirst(vulnerability.davis_assessment.data_assets_status),\n  vulnerability.type=takeAny(vulnerability.type),\n  vulnerability.parent.resolution.status=takeFirst(vulnerability.parent.resolution.status),\n  vulnerability.parent.mute.status=takeFirst(vulnerability.parent.mute.status),\n  vulnerability.risk.score=takeMax(if(vulnerability.mute.status!=\"MUTED\",vulnerability.risk.score,else:0)),\n  affected_entity.management_zones.names=arrayRemoveNulls(collectArray(affected_entity.management_zones.names, expand:true)),\n  affected_entity.vulnerable_component.names=arrayRemoveNulls(collectArray(affected_entity.vulnerable_component.names)),\n  nonMutedEntities=countIf(vulnerability.mute.status==\"NOT_MUTED\"),\n  openStatus=countIf(vulnerability.resolution.status==\"OPEN\")\n},by: {vulnerability.display_id, related_entities.kubernetes_workloads.ids,timestamp=bin(timestamp,15min)}\n| fieldsAdd vulnerability.resolution.status=if(vulnerability.parent.resolution.status==\"RESOLVED\",\"RESOLVED\",\n    else:if(openStatus==0, \"RESOLVED\",\n    else:\"OPEN\"))\n| fieldsAdd vulnerability.mute.status=if(vulnerability.parent.mute.status==\"MUTED\",\"MUTED\",\n    else:if(nonMutedEntities==0, \"MUTED\",\n    else:\"NOT_MUTED\"))\n| makeTimeseries {\n  Vulnerabilities=countIf(\n    vulnerability.resolution.status==\"OPEN\" \n    AND vulnerability.mute.status==\"NOT_MUTED\" \n    AND vulnerability.davis_assessment.vulnerable_function_status==\"IN_USE\", \n  default:null)\n}, time: timestamp, interval:15min\n\n| fieldsAdd `Open vulnerabilities`=arrayLast(arrayRemoveNulls(Vulnerabilities))","davis":{"enabled":false,"davisVisualization":{"isAvailable":true}},"visualization":"singleValue","visualizationSettings":{"thresholds":[],"chartSettings":{"xAxisScaling":"analyzedTimeframe","gapPolicy":"gap","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"curve":"linear","pointsDisplay":"auto","categoricalBarChartSettings":{"layout":"horizontal","categoryAxisTickLayout":"horizontal","scale":"absolute","groupMode":"stacked","colorPaletteMode":"multi-color","categoryAxis":["interval","Open vulnerabilities"],"categoryAxisLabel":"interval,Open vulnerabilities","valueAxis":["Open vulnerabilities"],"valueAxisLabel":"Open vulnerabilities","tooltipVariant":"single"},"colorPalette":"categorical","valueRepresentation":"absolute","truncationMode":"middle","hiddenLegendFields":["interval","Open vulnerabilities"],"fieldMapping":{"timestamp":"timeframe","leftAxisValues":["Vulnerabilities"]},"xAxisLabel":"timeframe","xAxisIsLabelVisible":false,"leftYAxisSettings":{}},"singleValue":{"showLabel":false,"label":"Open vulnerabilities","prefixIcon":"VulnerableFunctionIcon","recordField":"Open vulnerabilities","autoscale":true,"alignment":"center","trend":{"trendType":"auto","isVisible":true,"upward":"#D65151","downward":"#48936F"},"colorThresholdTarget":"value","isIconVisible":true,"sparklineSettings":{"record":"Vulnerabilities"}},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"linewrapEnabled":false,"lineWrapIds":[],"monospacedFontEnabled":false,"monospacedFontColumns":[],"columnWidths":{},"columnTypeOverrides":[{"fields":["Vulnerabilities"],"value":"sparkline","id":1736950131271}]},"honeycomb":{"shape":"hexagon","legend":{"hidden":false,"position":"auto"},"displayedFields":[],"dataMappings":{},"truncationMode":"middle","colorMode":"color-palette","colorPalette":"categorical"},"histogram":{"legend":"auto","yAxis":{"label":"Frequency","scale":"linear"},"colorPalette":"categorical","dataMappings":[{"valueAxis":"Open vulnerabilities","rangeAxis":""},{"valueAxis":"interval","rangeAxis":""}],"variant":"single","truncationMode":"middle","displayedFields":[]},"valueBoundaries":{"min":"auto","max":"auto"},"label":{"showLabel":false,"label":"Open vulnerabilities"},"icon":{"showIcon":false,"icon":""},"autoSelectVisualization":false,"dataMapping":{"value":"Open vulnerabilities"}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false}},"9":{"type":"data","title":"Total Open Vulnerabilities by Selected Cluster by Namespace","query":"fetch events\n| filter dt.system.bucket==\"default_security_events\"\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n\n| filter vulnerability.mute.status == \"NOT_MUTED\"\n| filter vulnerability.parent.mute.status == \"NOT_MUTED\"\n\n// now summarize on the vulnerability level\n| sort {timestamp, direction:\"descending\"}\n| expand related_entities.kubernetes_clusters.names\n| expand related_entities.kubernetes_workloads.names\n| expand related_entities.kubernetes_workloads.ids\n| filter isNotNull(related_entities.kubernetes_workloads.ids)\n| filter in(related_entities.kubernetes_clusters.names, $Cluster)\n\n\n| join [\n  fetch dt.entity.cloud_application\n  | fieldsAdd namespaceName, \n    app          = coalesce(\n        cloudApplicationLabels[app],\n        cloudApplicationLabels[`app.kubernetes.io/name`]\n    ),\n    cloudApplicationDeploymentTypes, \n    cloudApplicationLabels, \n    managed_by   = cloudApplicationLabels[`app.kubernetes.io/managed-by`]\n  | fieldsadd related_entities.kubernetes_workloads.ids=id \n  | expand cloudApplicationDeploymentTypes\n], on:{related_entities.kubernetes_workloads.ids}, fields:{namespaceName, app, cloudApplicationDeploymentTypes, cloudApplicationLabels}\n\n//| dedup {vulnerability.id, affected_entity.id}, sort: { timestamp desc }\n| summarize\n{\n  vulnerability.risk.level = takeFirst(vulnerability.risk.level),\n  risk.score=takeMax(if(vulnerability.mute.status!=\"MUTED\",vulnerability.risk.score,else:0)),\n  vulnerability.type=takeAny(vulnerability.type),\n  kubernetes_cluster = takeFirst(related_entities.kubernetes_clusters.names),\n  namespaceName = takeFirst(namespaceName),\n  vulnerability.stack=takeAny(vulnerability.stack),\n  vulnerability.parent.resolution.status=takeFirst(vulnerability.parent.resolution.status),\n  vulnerability.parent.mute.status=takeFirst(vulnerability.parent.mute.status),\n  affected_entity.management_zones.names=arrayRemoveNulls(collectArray(affected_entity.management_zones.names, expand:true)),\n  affected_entity.vulnerable_component.names=arrayRemoveNulls(collectArray(affected_entity.vulnerable_component.names)),\n  nonMutedEntities=countIf(vulnerability.mute.status==\"NOT_MUTED\"),\n  openStatus=countIf(vulnerability.resolution.status==\"OPEN\"),\n  vulnerability.davis_assessment.exposure_status = takeFirst(vulnerability.davis_assessment.exposure_status),\n  vulnerability.davis_assessment.data_assets_status = takeFirst(vulnerability.davis_assessment.data_assets_status),\n  vulnerability.davis_assessment.vulnerable_function_status = takeFirst(vulnerability.davis_assessment.vulnerable_function_status),\n  vulnerability.davis_assessment.exploit_status = takeFirst(vulnerability.davis_assessment.exploit_status)\n},by: {vulnerability.display_id, related_entities.kubernetes_workloads.ids}\n| fieldsAdd vulnerability.resolution.status=if(vulnerability.parent.resolution.status==\"RESOLVED\",\"RESOLVED\",\n    else:if(openStatus==0, \"RESOLVED\",\n    else:\"OPEN\"))\n| fieldsAdd vulnerability.mute.status=if(vulnerability.parent.mute.status==\"MUTED\",\"MUTED\",\n    else:if(nonMutedEntities==0, \"MUTED\",\n    else:\"NOT_MUTED\"))\n| summarize \n  Critical=countIf(vulnerability.risk.level==\"CRITICAL\"),\n  High=countIf(vulnerability.risk.level==\"HIGH\"),\n  Medium=countIf(vulnerability.risk.level==\"MEDIUM\"),\n  Low=countIf(vulnerability.risk.level==\"LOW\"),\n  Count = count(), by:{namespaceName}\n| sort Count desc\n\n","davis":{"enabled":false,"davisVisualization":{"isAvailable":true}},"visualization":"table","visualizationSettings":{"thresholds":[{"id":1,"field":"Critical","title":"","isEnabled":true,"rules":[{"id":0,"color":{"Default":"var(--dt-colors-charts-status-ideal-default, #2f6863)"},"comparator":"≥","label":""},{"id":1,"color":{"Default":"var(--dt-colors-charts-status-warning-default, #eca440)"},"comparator":"≥","label":""},{"id":2,"color":{"Default":"var(--dt-colors-charts-status-critical-default, #c4233b)"},"comparator":"≥","label":"","value":1}]},{"id":2,"field":"High","title":"","isEnabled":true,"rules":[{"id":0,"color":{"Default":"var(--dt-colors-charts-status-ideal-default, #2f6863)"},"comparator":"≥","label":""},{"id":1,"color":{"Default":"var(--dt-colors-charts-status-warning-default, #eca440)"},"comparator":"≥","label":"","value":2},{"id":2,"color":{"Default":"var(--dt-colors-charts-status-critical-default, #c4233b)"},"comparator":"≥","label":""}]}],"chartSettings":{"xAxisScaling":"analyzedTimeframe","gapPolicy":"gap","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"curve":"linear","pointsDisplay":"auto","categoricalBarChartSettings":{"layout":"horizontal","categoryAxisTickLayout":"horizontal","scale":"absolute","groupMode":"stacked","colorPaletteMode":"multi-color","categoryAxis":["namespaceName"],"valueAxis":["Critical","High","Medium","Low","Count"],"categoryAxisLabel":"namespaceName","valueAxisLabel":"Critical,High,Medium,Low,Count","tooltipVariant":"single"},"colorPalette":"categorical","valueRepresentation":"absolute","truncationMode":"middle","hiddenLegendFields":[]},"singleValue":{"showLabel":false,"label":"Open vulnerabilities","prefixIcon":"ApplicationSecuritySignetIcon","recordField":"Open vulnerabilities","autoscale":true,"alignment":"center","trend":{"trendType":"auto","isVisible":true},"colorThresholdTarget":"value","isIconVisible":true,"sparklineSettings":{}},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"linewrapEnabled":false,"lineWrapIds":[],"monospacedFontEnabled":false,"monospacedFontColumns":[],"columnWidths":{"[\"namespace\"]":113.359375},"columnTypeOverrides":[],"sortBy":{"columnId":"[\"namespaceName\"]","direction":"descending"}},"honeycomb":{"shape":"hexagon","legend":{"hidden":false,"position":"auto"},"displayedFields":["namespaceName"],"dataMappings":{"value":"Critical"},"truncationMode":"middle","colorMode":"color-palette","colorPalette":"blue"},"histogram":{"legend":"auto","yAxis":{"label":"Frequency","scale":"linear"},"colorPalette":"categorical","dataMappings":[{"valueAxis":"Critical","rangeAxis":""},{"valueAxis":"High","rangeAxis":""},{"valueAxis":"Medium","rangeAxis":""},{"valueAxis":"Low","rangeAxis":""},{"valueAxis":"Count","rangeAxis":""}],"variant":"single","truncationMode":"middle","displayedFields":["namespaceName"]},"valueBoundaries":{"min":"auto","max":"auto"},"label":{"showLabel":false,"label":"Critical"},"icon":{"showIcon":false,"icon":""},"autoSelectVisualization":false,"dataMapping":{"value":"Critical"}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":1,"defaultSamplingRatio":10,"enableSampling":false}},"17":{"type":"data","title":"","query":"fetch events\n| filter dt.system.bucket==\"default_security_events\"\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n| filter event.level==\"ENTITY\"\n\n| filter vulnerability.mute.status == \"NOT_MUTED\"\n| filter vulnerability.parent.mute.status == \"NOT_MUTED\"\n\n// now summarize on the vulnerability level\n| sort {timestamp, direction:\"descending\"}\n| expand related_entities.kubernetes_clusters.names\n| expand related_entities.kubernetes_workloads.names\n| expand related_entities.kubernetes_workloads.ids\n| filter isNotNull(related_entities.kubernetes_workloads.ids)\n\n| join [\n  fetch dt.entity.cloud_application\n  | fieldsAdd namespaceName, \n    app          = coalesce(\n        cloudApplicationLabels[app],\n        cloudApplicationLabels[`app.kubernetes.io/name`]\n    ),\n    cloudApplicationDeploymentTypes, \n    cloudApplicationLabels, \n    managed_by   = cloudApplicationLabels[`app.kubernetes.io/managed-by`]\n  | fieldsadd related_entities.kubernetes_workloads.ids=id \n  | expand cloudApplicationDeploymentTypes\n], on:{related_entities.kubernetes_workloads.ids}, fields:{namespaceName, app, cloudApplicationDeploymentTypes, cloudApplicationLabels}\n\n| filter in(related_entities.kubernetes_clusters.names, $Cluster)\n| filter in(namespaceName, $Namespace)\n| filter in(cloudApplicationDeploymentTypes, $Workload)\n| filter in(app, $AppName) or isNull(app)\n\n\n//| dedup {vulnerability.id, affected_entity.id}, sort: { timestamp desc }\n\n\n// | summarize count = count(), by:{vulnerability.risk.level}\n\n\n| summarize\n{\n  app = takeFirst(app),\n  namespaceName = takeFirst(namespaceName),\n  cloudApplicationLabels = takeFirst(cloudApplicationLabels),\n  cloudApplicationDeploymentTypes = takeFirst(cloudApplicationDeploymentTypes),\n  risk.level = takeFirst(vulnerability.risk.level),\n  risk.score=takeMax(if(vulnerability.mute.status!=\"MUTED\",vulnerability.risk.score,else:0)),\n  vulnerability.type=takeAny(vulnerability.type),\n  vulnerability.stack=takeAny(vulnerability.stack),\n  vulnerability.parent.resolution.status=takeFirst(vulnerability.parent.resolution.status),\n  vulnerability.parent.mute.status=takeFirst(vulnerability.parent.mute.status),\n  affected_entity.management_zones.names=arrayRemoveNulls(collectArray(affected_entity.management_zones.names, expand:true)),\n  affected_entity.vulnerable_component.names=arrayRemoveNulls(collectArray(affected_entity.vulnerable_component.names)),\n  nonMutedEntities=countIf(vulnerability.mute.status==\"NOT_MUTED\"),\n  openStatus=countIf(vulnerability.resolution.status==\"OPEN\"),\n  vulnerability.davis_assessment.exposure_status = takeFirst(vulnerability.davis_assessment.exposure_status),\n  vulnerability.davis_assessment.data_assets_status = takeFirst(vulnerability.davis_assessment.data_assets_status),\n  vulnerability.davis_assessment.vulnerable_function_status = takeFirst(vulnerability.davis_assessment.vulnerable_function_status),\n  vulnerability.davis_assessment.exploit_status = takeFirst(vulnerability.davis_assessment.exploit_status)\n},by: {vulnerability.display_id, related_entities.kubernetes_workloads.ids}\n\n| filter vulnerability.stack == \"SOFTWARE\"","davis":{"enabled":false,"davisVisualization":{"isAvailable":true}},"visualization":"table","visualizationSettings":{"thresholds":[{"id":1,"field":"risk.level","title":"","isEnabled":true,"rules":[{"id":0,"color":{"Default":"var(--dt-colors-charts-categorical-color-01-default, #134fc9)"},"comparator":"=","label":"","value":"LOW"},{"id":1,"color":{"Default":"var(--dt-colors-charts-status-warning-default, #eca440)"},"comparator":"=","label":"","value":"MEDIUM"},{"id":2,"color":{"Default":"var(--dt-colors-charts-status-critical-default, #c4233b)"},"comparator":"=","label":"","value":"CRITICAL"},{"id":3,"color":{"Default":"var(--dt-colors-charts-security-risk-level-high-default, #cd3741)"},"comparator":"=","label":"","value":"HIGH"}]}],"chartSettings":{"xAxisScaling":"analyzedTimeframe","gapPolicy":"gap","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"curve":"linear","pointsDisplay":"auto","categoricalBarChartSettings":{"layout":"horizontal","categoryAxisTickLayout":"horizontal","scale":"absolute","groupMode":"stacked","colorPaletteMode":"multi-color","categoryAxis":["vulnerability.display_id","related_entities.kubernetes_workloads.ids","namespaceName","cloudApplicationDeploymentTypes","risk.level","vulnerability.type","vulnerability.stack","vulnerability.parent.resolution.status","vulnerability.parent.mute.status","vulnerability.davis_assessment.exposure_status","vulnerability.davis_assessment.data_assets_status","vulnerability.davis_assessment.vulnerable_function_status","vulnerability.davis_assessment.exploit_status","app"],"categoryAxisLabel":"vulnerability.display_id,related_entities.kubernetes_workloads.ids,namespaceName,cloudApplicationDeploymentTypes,risk.level,vulnerability.type,vulnerability.stack,vulnerability.parent.resolution.status,vulnerability.parent.mute.status,vulnerability.davis_assessment.exposure_status,vulnerability.davis_assessment.data_assets_status,vulnerability.davis_assessment.vulnerable_function_status,vulnerability.davis_assessment.exploit_status,app","valueAxis":["risk.score","nonMutedEntities","openStatus"],"valueAxisLabel":"risk.score,nonMutedEntities,openStatus","tooltipVariant":"single"},"colorPalette":"categorical","valueRepresentation":"absolute","truncationMode":"middle"},"singleValue":{"showLabel":true,"label":"vulnerability.display_id","prefixIcon":"","recordField":"vulnerability.display_id","autoscale":true,"alignment":"center","trend":{"trendType":"auto","isVisible":true},"colorThresholdTarget":"value","sparklineSettings":{"record":"affected_entity.vulnerable_component.names"}},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[["related_entities.kubernetes_workloads.ids"],["app"],["affected_entity.management_zones.names"],["affected_entity.vulnerable_component.names"],["nonMutedEntities"],["openStatus"]],"linewrapEnabled":false,"lineWrapIds":[],"monospacedFontEnabled":false,"monospacedFontColumns":[],"columnWidths":{},"columnTypeOverrides":[]},"honeycomb":{"shape":"hexagon","legend":{"hidden":false,"position":"auto"},"displayedFields":["vulnerability.display_id","related_entities.kubernetes_workloads.ids","namespaceName","cloudApplicationDeploymentTypes","risk.level","vulnerability.type","vulnerability.stack","vulnerability.parent.resolution.status","vulnerability.parent.mute.status","vulnerability.davis_assessment.exposure_status","vulnerability.davis_assessment.data_assets_status","vulnerability.davis_assessment.vulnerable_function_status","vulnerability.davis_assessment.exploit_status","app"],"dataMappings":{"value":"risk.score"},"truncationMode":"middle","colorMode":"color-palette","colorPalette":"blue"},"histogram":{"legend":"auto","yAxis":{"label":"Frequency","scale":"linear"},"colorPalette":"categorical","dataMappings":[{"valueAxis":"risk.score","rangeAxis":""},{"valueAxis":"nonMutedEntities","rangeAxis":""},{"valueAxis":"openStatus","rangeAxis":""}],"variant":"single","truncationMode":"middle","displayedFields":["vulnerability.display_id","related_entities.kubernetes_workloads.ids","risk.level","vulnerability.type","vulnerability.stack","vulnerability.parent.resolution.status","vulnerability.parent.mute.status","vulnerability.davis_assessment.exposure_status","vulnerability.davis_assessment.data_assets_status","vulnerability.davis_assessment.vulnerable_function_status","vulnerability.davis_assessment.exploit_status"]},"valueBoundaries":{"min":"auto","max":"auto"},"label":{"showLabel":false,"label":"risk.score"},"icon":{"showIcon":false,"icon":""},"autoSelectVisualization":false,"dataMapping":{"value":"risk.score"}},"querySettings":{"maxResultRecords":5000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":20,"defaultSamplingRatio":10,"enableSampling":false}},"20":{"type":"markdown","title":"","content":"## Runtime Vulnerability Analytics For Kubernetes"},"21":{"type":"markdown","title":"","content":"Select 1 more more K8s Cluster to populate findings by Namespace below"}},"layouts":{"0":{"x":10,"y":1,"w":5,"h":3},"1":{"x":0,"y":8,"w":24,"h":1},"3":{"x":0,"y":0,"w":10,"h":3},"4":{"x":19,"y":1,"w":4,"h":3},"5":{"x":15,"y":1,"w":4,"h":3},"6":{"x":10,"y":4,"w":5,"h":3},"7":{"x":15,"y":4,"w":4,"h":3},"8":{"x":19,"y":4,"w":4,"h":3},"9":{"x":0,"y":4,"w":10,"h":4},"17":{"x":0,"y":9,"w":23,"h":6},"20":{"x":10,"y":0,"w":14,"h":1},"21":{"x":0,"y":3,"w":10,"h":1}},"importedWithCode":false,"settings":{}}